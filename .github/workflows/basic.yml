# arn:aws:iam::548501963152:role/cml_pulse_runner
name: Basic
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read


jobs:
  done:
    runs-on: ubuntu-latest
    needs: [target-subnet-test, target-vpc-test]
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::548501963152:role/cml_pulse_runner
          aws-region: us-west-2
      - name: Clean Up
        run: |
          states=$(aws ec2 describe-instances --region us-west-2 | jq '.Reservations[].Instances[].State.Name' | uniq)
          if [ "$states" != '"terminated"' ]; then
            echo "$states"
            exit 1
          fi

  aws-oidc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-cml@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::548501963152:role/cml_pulse_runner
          aws-region: us-west-2
      - name: deploy runner
        run: |
          cml runner \
            --single \
            --labels=basic_aws \
            --token=${{ secrets.DACBD_PAT }} \
            --cloud=aws \
            --cloud-region=us-west-2 \
            --cloud-type=t3.small
  basic_aws_test:
    needs: [aws-oidc]
    runs-on: [self-hosted, basic_aws]
    steps:           
      - uses: actions/checkout@v3
      - run: |
          which cml
          cml --version

  target-subnet: # make a pivot test (no public ips)
    needs: [basic_aws_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-cml@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::548501963152:role/cml_pulse_runner
          aws-region: us-west-2
      - name: deploy runner
        run: |
          cml runner \
            --single \
            --labels=target_subnet \
            --token=${{ secrets.DACBD_PAT }} \
            --cloud=aws \
            --cloud-region=us-west-2 \
            --cloud-type=t3.small \
            --cloud-aws-security-group=cml-target-rule \
            --cloud-aws-subnet-id=subnet-071ac872d5f008add
  target-subnet-test:
    needs: [target-subnet]
    runs-on: [self-hosted, target_subnet]
    steps:
      - uses: actions/checkout@v3
      - run: |
          which cml
          cml --version

  target-vpc:
    needs: [basic_aws_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-cml@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::548501963152:role/cml_pulse_runner
          aws-region: us-west-2
      - name: deploy runner
        run: |
          cml runner \
            --single \
            --labels=target_vpc \
            --token=${{ secrets.DACBD_PAT }} \
            --cloud=aws \
            --cloud-region=us-west-2 \
            --cloud-type=t3.small \
            --cloud-aws-security-group=cml-target-rule
  target-vpc-test:
    needs: [target-vpc]
    runs-on: [self-hosted, target_vpc]
    steps:
      - uses: actions/checkout@v3
      - run: |
          which cml
          cml --version

  cml_version:
    needs: [basic_aws_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-cml@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::548501963152:role/cml_pulse_runner
          aws-region: us-west-2
      - name: deploy runner
        run: |
          cml runner \
            --single \
            --labels=cmlversion \
            --token=${{ secrets.DACBD_PAT }} \
            --cloud=aws \
            --cloud-region=us-west-2 \
            --cloud-type=t3.small \
            --cml-version=github:iterative/cml#v0.12.0
  cml_version-test:
    needs: [cml_version]
    runs-on: [self-hosted, cmlversion]
    steps:
      - uses: actions/checkout@v3
      - run: |
          which cml
          result=$(cml --version)
          echo "$result"


